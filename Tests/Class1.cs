using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Moq;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using TestGenerator;

namespace TestGenerator.Test
{
    [TestClass()]
    public class DummyTest
    {
        private Mock<ICloneable> cloneable;
        private Mock<IAsyncDisposable> asyncDisposable;
        private Dummy testDummy;
        [TestInitialize()]
        public void Initialization()
        {
            cloneable = new Mock<ICloneable>();
            asyncDisposable = new Mock<IAsyncDisposable>();
            testDummy = new Dummy(cloneable.Object, asyncDisposable.Object);
        }

        [TestMethod()]
        public void methodNoArgsTest()
        {

            // Arrange
            int actual = testDummy.methodNoArgs();

            // Assert
            int expected = default;
            Assert.AreEqual(actual, expected);
            Assert.Fail("autogenerated");
        }

        [TestMethod()]
        public void methodNoReturnTest()
        {

            // Arrange
            List<double[]> hard = default;
            Int16 fuck = default;
            HashSet<List<bool>> sjkd = default;

            // Act
            Assert.Fail("autogenerated");
        }

        [TestMethod()]
        public void tupleMethodTest()
        {

            // Arrange
            int a = default;
            double b = default;
            DateTime aaa = default;

            // Act
            (int, List<bool>) actual = testDummy.tupleMethod(a, b, aaa);

            // Assert
            (int, List<bool>) expected = default;
            Assert.AreEqual(actual, expected);
            Assert.Fail("autogenerated");
        }

        [TestMethod()]
        public void methodTest()
        {

            // Arrange
            int i = default;
            Dummy n = default;

            // Act
            Dummy actual = testDummy.method(i, n);

            // Assert
            Dummy expected = default;
            Assert.AreEqual(actual, expected);
            Assert.Fail("autogenerated");
        }
    }
}